<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Numerics on Chris Miles</title>
    <link>/~miles/tags/numerics/</link>
    <description>Recent content in Numerics on Chris Miles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/~miles/tags/numerics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The true jump method</title>
      <link>/~miles/post/true-jump-method/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/~miles/post/true-jump-method/</guid>
      <description>A while ago, I learned a numerical recipe for simulating state-dependent jump processes from this paper by Romain Veltz. After some digging, this book by Graham and Talay seems to introduce the method. It’s a cute trick that even my advisor was excited by, so I figured it seemed like a nice short thing to share.
Setup Suppose we have some switching process \(X_t\), which between jump events evolves via \[\begin{equation} \frac{\mathrm{d}}{\mathrm{d}t} X_t = F(X_t).</description>
    </item>
    
    <item>
      <title>Operator splitting</title>
      <link>/~miles/post/operator-splitting/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/~miles/post/operator-splitting/</guid>
      <description>I stumbled across the recent paper “Efficient Reactive Brownian Dynamics”, which proposes a reaction-diffusion scheme based on a technique called Strang splitting. While I was vaguely familiar with the notion of splitting, I wanted to write up this post to think out some of the details I hadn’t previously.
The reaction-diffusion scheme is a perfect context to understand splitting because there are effectively two (coupled, but distinct) dynamics going on: diffusion and reactions.</description>
    </item>
    
  </channel>
</rss>